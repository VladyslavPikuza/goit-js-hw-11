{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-function.js","../src/main.js"],"sourcesContent":["const API_KEY = '46153478-1b8179550e9312780d25c3b1d'; \n\nexport async function fetchImages(query) {\n  const url = `https://pixabay.com/api/?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&safesearch=true`;\n  \n  const response = await fetch(url);\n  \n  if (!response.ok) {\n    throw new Error('Failed to fetch images');\n  }\n\n  const data = await response.json();\n  return data.hits;\n}\n\n","export function renderGallery(images) {\n  const gallery = document.querySelector('.gallery');\n  const markup = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n    return `\n      <div class=\"photo-card\">\n        <a href=\"${largeImageURL}\">\n          <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n        </a>\n        <div class=\"info\">\n          <p><b>Likes:</b> ${likes}</p>\n          <p><b>Views:</b> ${views}</p>\n          <p><b>Comments:</b> ${comments}</p>\n          <p><b>Downloads:</b> ${downloads}</p>\n        </div>\n      </div>`;\n  }).join('');\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n\n  // Активируем SimpleLightbox после добавления изображений\n  new SimpleLightbox('.gallery a', { /* опции */ }).refresh();\n}\n\nexport function clearGallery() {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = ''; // Очищаем галерею\n}\n\n\n\n","import { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery, clearGallery } from './js/render-function.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\n\n\nsearchForm.addEventListener('submit', async (event) => {\n  event.preventDefault();\n\n  const query = event.target.elements.searchQuery.value.trim();\n\n  \n  if (query === '') {\n    iziToast.error({ title: 'Error', message: 'Please enter a search query' });\n    return;\n  }\n\n \n  try {\n    const images = await fetchImages(query);\n\n \n    if (images.length === 0) {\n      iziToast.error({ title: 'No results', message: 'No images found for your search query' });\n      return;\n    }\n\n   \n    clearGallery();\n    \n    \n    renderGallery(images);\n  } catch (error) {\n    iziToast.error({ title: 'Error', message: 'Failed to fetch images' });\n  }\n});\n"],"names":["API_KEY","fetchImages","query","url","response","renderGallery","images","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","searchForm","event","iziToast"],"mappings":"svBAAA,MAAMA,EAAU,qCAET,eAAeC,EAAYC,EAAO,CACvC,MAAMC,EAAM,gCAAgCH,CAAO,MAAM,mBAAmBE,CAAK,CAAC,2DAE5EE,EAAW,MAAM,MAAMD,CAAG,EAEhC,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,wBAAwB,EAI1C,OADa,MAAMA,EAAS,QAChB,IACd,CCbO,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAASF,EAAO,IAAI,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IACxF;AAAA;AAAA,mBAEQL,CAAa;AAAA,sBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,6BAGnBC,CAAK;AAAA,6BACLC,CAAK;AAAA,gCACFC,CAAQ;AAAA,iCACPC,CAAS;AAAA;AAAA,aAGvC,EAAE,KAAK,EAAE,EAEVR,EAAQ,mBAAmB,YAAaC,CAAM,EAG9C,IAAI,eAAe,aAAc,EAAe,EAAE,QAAO,CAC3D,CAEO,SAASQ,GAAe,CAC7B,MAAMT,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,EACtB,CCpBA,MAAMU,EAAa,SAAS,cAAc,cAAc,EACxC,SAAS,cAAc,UAAU,EAGjDA,EAAW,iBAAiB,SAAU,MAAOC,GAAU,CACrDA,EAAM,eAAc,EAEpB,MAAMhB,EAAQgB,EAAM,OAAO,SAAS,YAAY,MAAM,OAGtD,GAAIhB,IAAU,GAAI,CAChBiB,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,6BAA6B,CAAE,EACzE,MACD,CAGD,GAAI,CACF,MAAMb,EAAS,MAAML,EAAYC,CAAK,EAGtC,GAAII,EAAO,SAAW,EAAG,CACvBa,EAAS,MAAM,CAAE,MAAO,aAAc,QAAS,uCAAuC,CAAE,EACxF,MACD,CAGDH,IAGAX,EAAcC,CAAM,CACrB,MAAe,CACda,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,wBAAwB,CAAE,CACrE,CACH,CAAC"}